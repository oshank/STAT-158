demo()
q()
eig <- eigen(A)
A <- {[2,1],[3,4]}
A <- [{2,1},{3,4}]
A <- [(2,1),(3,4)]
A = matrix()
A = matrix()
A = matrix(c(2,1,3,4), nrow=2, ncol=2, byrow = T)
A
eig <- eigen(A)
X <- eig$vectors
D <- diag(eig$values)
eig
X
D
2/sqrt(2)
1/sqrt(2)
help(rexp)
```{r}
Y <- rexp(2, rate = 1 / 100)
Y
min(Y)
num_realizations <- 5
Y <- rexp(2 * num_realizations, rate = 1 / 100)
Y
YY <- matrix(Y, 2, num_realizations)
YY
min_Y <- apply(YY, MAR = 2, FUN = "min") # 1 for rows, 2 for columns
min_Y
set.seed(4302019)
num_realizations <- 10000
Y <- rexp(2 * num_realizations, rate = 1 / 100)
YY <- matrix(Y, 2, num_realizations)
min_Y <- apply(YY, MAR = 2, FUN = "min") # 1 for rows, 2 for columns
hist(min_Y, col = "LightBlue", freq = FALSE)
# freq = FALSE so that histogram is normalized to be a density, with area 1
X_grid <- seq(from = 0, to = max(min_Y), length = 1000)
f_X <- (1 / 50) * exp(-X_grid / 50)
hist(min_Y, col = "LightBlue", freq = FALSE)
lines(X_grid, f_X, lwd = 3, col = "magenta")
X_grid <- seq(from = 0, to = max(min_Y), length = 1000)
f_X <- (1 / 50) * exp(-X_grid / 50)
hist(min_Y, col = "LightBlue", freq = FALSE)
lines(X_grid, f_X, lwd = 3, col = "magenta")
set.seed(4302019)
num_realizations <- 10000
Y <- rexp(2 * num_realizations, rate = 1 / 100)
YY <- matrix(Y, 2, num_realizations)
min_Y <- apply(YY, MAR = 2, FUN = "min") # 1 for rows, 2 for columns
hist(min_Y, col = "LightBlue", freq = FALSE)
# freq = FALSE so that histogram is normalized to be a density, with area 1
set.seed(4302019)
num_realizations <- 10000
Y <- rexp(2 * num_realizations, rate = 1 / 100)
YY <- matrix(Y, 2, num_realizations)
max_Y <- apply(YY, MAR = 2, FUN = "max") # 1 for rows, 2 for columns
hist(max_Y, col = "LightBlue", freq = FALSE)
X_grid <- seq(from = 0, to = max(max_Y), length = 1000)
f_X <- (1 / 50) * exp(-X_grid / 50)
hist(min_Y, col = "LightBlue", freq = FALSE)
lines(X_grid, f_X, lwd = 3, col = "magenta")
set.seed(4302019)
num_realizations <- 10000
Y <- rexp(2 * num_realizations, rate = 1 / 100)
YY <- matrix(Y, 2, num_realizations)
max_Y <- apply(YY, MAR = 2, FUN = "max") # 1 for rows, 2 for columns
hist(max_Y, col = "LightBlue", freq = FALSE)
X_grid <- seq(from = 0, to = max(max_Y), length = 1000)
f_X <- (1 / 50) * exp(-X_grid / 50)
hist(max_Y, col = "LightBlue", freq = FALSE)
lines(X_grid, f_X, lwd = 3, col = "magenta")
set.seed(4302019)
prob <- function(delta, sigma, n){
prob <- pnorm(delta / sqrt(sigma ^ 2 / n)) - pnorm(-delta / sqrt(sigma ^ 2 / n))
return(prob)
}
?qprob
??qprob
## Exercise 7.9
## a)
qprob(.3, 1, 9)
set.seed(4302019)
qprob <- function(delta, sigma, n){
prob <- pnorm(delta / sqrt(sigma ^ 2 / n)) - pnorm(-delta / sqrt(sigma ^ 2 / n))
return(prob)
}
## Exercise 7.9
## a)
qprob(.3, 1, 9)
## b)
qprob(.3,1,c(25,36,49,64))
## using qprob() from above
qprob(.3,2,9)
## b)
qprob(.3,2,c(25,26,49,64))
install.packages("randomcoloR")
# Homework 3
# STAT 421
install.packages("randomcoloR")
library(randomcoloR)
x0 <- 0
p <- .5
q <- 1-p
iter <- 200
numChains <- 3
xmtx <- matrix(0,numChains,iter+1)
for(i in seq(0,numChains)){
xCur <- x0
xmtx[i,1] <- xCur
for(j in seq(1,iter)){
jump <- sample(c(-1,1),1,T,c(p,q))
xCur <- xCur + jump
xmtx[i,j+1] <- xCur
}
}
plot(xmtx[1,], type = "l", ylim = c(min(xmtx[]), max(xmtx[])), col = palette[1])
#lines(xmtx[2,], col = "green")
#lines(xmtx[3,], col = "blue")
palette <- distinctColorPalette(numChains)
for(i in seq(2, numChains)){
lines(xmtx[i,], col = palette[i])
}
# Homework 3
# STAT 421
# install.packages("randomcoloR")
library(randomcoloR)
x0 <- 0
p <- .5
q <- 1-p
iter <- 200
numChains <- 3
xmtx <- matrix(0,numChains,iter+1)
for(i in seq(0,numChains)){
xCur <- x0
xmtx[i,1] <- xCur
for(j in seq(1,iter)){
jump <- sample(c(-1,1),1,T,c(p,q))
xCur <- xCur + jump
xmtx[i,j+1] <- xCur
}
}
palette <- distinctColorPalette(numChains)
plot(xmtx[1,], type = "l", ylim = c(min(xmtx[]), max(xmtx[])), col = palette[1])
#lines(xmtx[2,], col = "green")
#lines(xmtx[3,], col = "blue")
for(i in seq(2, numChains)){
lines(xmtx[i,], col = palette[i])
}
# Homework 3
# STAT 421
# install.packages("randomcoloR")
library(randomcoloR)
set.seed(4212019)
x0 <- 0
p <- .5
q <- 1-p
iter <- 200
numChains <- 3
xmtx <- matrix(0,numChains,iter+1)
for(i in seq(0,numChains)){
xCur <- x0
xmtx[i,1] <- xCur
for(j in seq(1,iter)){
jump <- sample(c(-1,1),1,T,c(p,q))
xCur <- xCur + jump
xmtx[i,j+1] <- xCur
}
}
palette <- distinctColorPalette(numChains)
plot(xmtx[1,], type = "l", ylim = c(min(xmtx[]), max(xmtx[])), col = palette[1])
#lines(xmtx[2,], col = "green")
#lines(xmtx[3,], col = "blue")
for(i in seq(2, numChains)){
lines(xmtx[i,], col = palette[i])
}
# Homework 3
# STAT 421
# install.packages("randomcoloR")
library(randomcoloR)
set.seed(4212019)
x0 <- 0
p <- .5
q <- 1-p
iter <- 200
numChains <- 3
xmtx <- matrix(0,numChains,iter+1)
for(i in seq(0,numChains)){
xCur <- x0
xmtx[i,1] <- xCur
for(j in seq(1,iter)){
jump <- sample(c(-1,1),1,T,c(p,q))
xCur <- xCur + jump
xmtx[i,j+1] <- xCur
}
}
palette <- distinctColorPalette(numChains)
plot(xmtx[1,], type = "l", ylim = c(min(xmtx[]), max(xmtx[])), col = palette[1])
#lines(xmtx[2,], col = "green")
#lines(xmtx[3,], col = "blue")
for(i in seq(2, numChains)){
lines(xmtx[i,], col = palette[i])
}
# Homework 3
# STAT 421
set.seed(4202019)
x0 <- 0
p <- .5
q <- 1-p
iter <- 200
numChains <- 500
xmtx <- matrix(0,numChains,iter+1)
for(i in seq(0,numChains)){
xCur <- x0
xmtx[i,1] <- xCur
for(j in seq(1,iter)){
jump <- sample(c(-1,1),1,T,c(p,q))
xCur <- xCur + jump
xmtx[i,j+1] <- xCur
}
}
palette <- distinctColorPalette(numChains)
plot(xmtx[1,], type = "l", ylim = c(min(xmtx[]), max(xmtx[])), col = palette[1])
#lines(xmtx[2,], col = "green")
#lines(xmtx[3,], col = "blue")
for(i in seq(2, numChains)){
lines(xmtx[i,], col = palette[i])
}
hist(xmtx[,50], freq =F, col = "lightblue")
mean(xmtx[,50])
var(xmtx[,50])
hist(xmtx[,200], freq=F, col = "pink")
mean(xmtx[,200])
var(xmtx[,200])
# Homework 3
# STAT 421
set.seed(4202019)
x0 <- 0
p <- .5
q <- 1-p
iter <- 200
numChains <- 3
xmtx <- matrix(0,numChains,iter+1)
for(i in seq(0,numChains)){
xCur <- x0
xmtx[i,1] <- xCur
for(j in seq(1,iter)){
jump <- sample(c(-1,1),1,T,c(p,q))
xCur <- xCur + jump
xmtx[i,j+1] <- xCur
}
}
palette <- distinctColorPalette(numChains)
plot(xmtx[1,], type = "l", ylim = c(min(xmtx[]), max(xmtx[])), col = palette[1])
#lines(xmtx[2,], col = "green")
#lines(xmtx[3,], col = "blue")
for(i in seq(2, numChains)){
lines(xmtx[i,], col = palette[i])
}
hist(xmtx[,50], freq =F, col = "lightblue")
mean(xmtx[,50])
var(xmtx[,50])
hist(xmtx[,200], freq=F, col = "pink")
mean(xmtx[,200])
var(xmtx[,200])
# Homework 3
# STAT 421
set.seed(4202019)
x0 <- 0
p <- .5
q <- 1-p
iter <- 200
numChains <- 500
xmtx <- matrix(0,numChains,iter+1)
for(i in seq(0,numChains)){
xCur <- x0
xmtx[i,1] <- xCur
for(j in seq(1,iter)){
jump <- sample(c(-1,1),1,T,c(p,q))
xCur <- xCur + jump
xmtx[i,j+1] <- xCur
}
}
palette <- distinctColorPalette(numChains)
plot(xmtx[1,], type = "l", ylim = c(min(xmtx[]), max(xmtx[])), col = palette[1])
#lines(xmtx[2,], col = "green")
#lines(xmtx[3,], col = "blue")
for(i in seq(2, numChains)){
lines(xmtx[i,], col = palette[i])
}
hist(xmtx[,50], freq =F, col = "lightblue")
mean(xmtx[,50])
var(xmtx[,50])
hist(xmtx[,200], freq=F, col = "pink")
mean(xmtx[,200])
var(xmtx[,200])
set.seed(4202019)
x0 <- 0
p <- .5
q <- 1-p
iter <- 2000
numChains <- 5000
xmtx <- matrix(0,numChains,iter+1)
for(i in seq(0,numChains)){
xCur <- x0
xmtx[i,1] <- xCur
for(j in seq(1,iter)){
jump <- sample(c(-1,1),1,T,c(p,q))
xCur <- xCur + jump
xmtx[i,j+1] <- xCur
}
}
palette <- distinctColorPalette(numChains)
plot(xmtx[1,], type = "l", ylim = c(min(xmtx[]), max(xmtx[])), col = palette[1])
#lines(xmtx[2,], col = "green")
#lines(xmtx[3,], col = "blue")
for(i in seq(2, numChains)){
lines(xmtx[i,], col = palette[i])
}
hist(xmtx[,50], freq =F, col = "lightblue")
mean(xmtx[,50])
var(xmtx[,50])
hist(xmtx[,200], freq=F, col = "pink")
mean(xmtx[,200])
var(xmtx[,200])
# Homework 3
# STAT 421
set.seed(4202019)
x0 <- 0
p <- .5
q <- 1-p
iter <- 200
numChains <- 500
xmtx <- matrix(0,numChains,iter+1)
for(i in seq(0,numChains)){
xCur <- x0
xmtx[i,1] <- xCur
for(j in seq(1,iter)){
jump <- sample(c(-1,1),1,T,c(p,q))
xCur <- xCur + jump
xmtx[i,j+1] <- xCur
}
}
palette <- distinctColorPalette(numChains)
plot(xmtx[1,], type = "l", ylim = c(min(xmtx[]), max(xmtx[])), col = palette[1])
#lines(xmtx[2,], col = "green")
#lines(xmtx[3,], col = "blue")
for(i in seq(2, numChains)){
lines(xmtx[i,], col = palette[i])
}
hist(xmtx[,50], freq =F, col = "lightblue")
mean(xmtx[,50])
var(xmtx[,50])
hist(xmtx[,200], freq=F, col = "pink")
mean(xmtx[,200])
var(xmtx[,200])
setwd("~/Git/STAT-158")
Magazines <- read.csv("~/Git/STAT-158/Magazines.csv", header=FALSE)
View(Magazines)
knitr::opts_chunk$set(echo = TRUE)
Magazines <- read.csv("~/Git/STAT-158/Magazines.csv", header=FALSE)
summary(Magazines)
head(Magazines)
head(Magazines)
View(Magazines)
Magazines[10,]
Magazines[15,]
Magazines <- read.csv("~/Git/STAT-158/Magazines.csv", header=TRUE)
summary(Magazines)
head(Magazines)
head(Magazines)
Magazines[10,]
Magazines[15,]
attach(Magazines)
sum(Magazines$Words)
(Magazines$Words > 203)
attach(Magazines)
sum(Magazines$Words)
sum((Magazines$Words > 203))
attach(Magazines)
sum((Magazines$Words > 203))
Just_Numbers <- Magazines[,3]
Just_Numbers
Just_Numbers <- Magazines[,1:3]
Just_Numbers
?paris
?pairs
pairs(Just_Numbers)
?sort
sort(Just_Numbers[1,], T)
sort(Just_Numbers[,1], T)
View(Just_Numbers)
sort(Just_Numbers[,2], T)
View(Just_Numbers)
Just_Numbers[with(Just_Numbers, order(-Just_Numbers$Sentences)]
Just_Numbers[with(Just_Numbers, order(-Just_Numbers$Sentences),]
Just_Numbers[with(Just_Numbers, order(-Just_Numbers$Sentences)),]
Just_Numbers[with(Just_Numbers, order(-Just_Numbers$Sentences)),]
View(Just_Numbers)
?cbind
example("cbind")
